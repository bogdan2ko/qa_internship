{"name": "Негативные сценарии логина", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00C1FC53+61635]\n\tGetHandleVerifier [0x00C1FC94+61700]\n\t(No symbol) [0x00A405D3]\n\t(No symbol) [0x00A8899E]\n\t(No symbol) [0x00A88D3B]\n\t(No symbol) [0x00AD0E12]\n\t(No symbol) [0x00AAD2E4]\n\t(No symbol) [0x00ACE61B]\n\t(No symbol) [0x00AAD096]\n\t(No symbol) [0x00A7C840]\n\t(No symbol) [0x00A7D6A4]\n\tGetHandleVerifier [0x00EA4573+2701795]\n\tGetHandleVerifier [0x00E9FCF6+2683238]\n\tGetHandleVerifier [0x00EBAA3E+2793134]\n\tGetHandleVerifier [0x00C36915+155013]\n\tGetHandleVerifier [0x00C3CFFD+181357]\n\tGetHandleVerifier [0x00C274A8+92440]\n\tGetHandleVerifier [0x00C27650+92864]\n\tGetHandleVerifier [0x00C12040+5296]\n\tBaseThreadInitThunk [0x75727BA9+25]\n\tRtlInitializeExceptionChain [0x7716C2EB+107]\n\tRtlClearBits [0x7716C26F+191]", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b7e7cabf888eaea6c61fe57e8940dec1\")>, username = 'student', password = ''\n\n    @pytest.mark.parametrize(\"username,password\", invalid_data)\n    @allure.title(\"Негативные сценарии логина\")\n    def test_login_negative(browser, username, password):\n        page = LoginPage(browser)\n        page.open()\n    \n        page.set_username(username)\n        page.set_password(password)\n>       page.submit()\n\ntests\\ui\\test_login_negative.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\login_page.py:35: in submit\n    self.click(self._SUBMIT)\npages\\base_page.py:15: in click\n    self._visible(locator).click()\npages\\base_page.py:12: in _visible\n    return self.wait.until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b7e7cabf888eaea6c61fe57e8940dec1\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x000001D3BF2345E0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00C1FC53+61635]\nE       \tGetHandleVerifier [0x00C1FC94+61700]\nE       \t(No symbol) [0x00A405D3]\nE       \t(No symbol) [0x00A8899E]\nE       \t(No symbol) [0x00A88D3B]\nE       \t(No symbol) [0x00AD0E12]\nE       \t(No symbol) [0x00AAD2E4]\nE       \t(No symbol) [0x00ACE61B]\nE       \t(No symbol) [0x00AAD096]\nE       \t(No symbol) [0x00A7C840]\nE       \t(No symbol) [0x00A7D6A4]\nE       \tGetHandleVerifier [0x00EA4573+2701795]\nE       \tGetHandleVerifier [0x00E9FCF6+2683238]\nE       \tGetHandleVerifier [0x00EBAA3E+2793134]\nE       \tGetHandleVerifier [0x00C36915+155013]\nE       \tGetHandleVerifier [0x00C3CFFD+181357]\nE       \tGetHandleVerifier [0x00C274A8+92440]\nE       \tGetHandleVerifier [0x00C27650+92864]\nE       \tGetHandleVerifier [0x00C12040+5296]\nE       \tBaseThreadInitThunk [0x75727BA9+25]\nE       \tRtlInitializeExceptionChain [0x7716C2EB+107]\nE       \tRtlClearBits [0x7716C26F+191]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "steps": [{"name": "Открываем страницу логина", "status": "passed", "start": 1746750795563, "stop": 1746750795944}, {"name": "Вводим имя пользователя: 'student'", "status": "passed", "parameters": [{"name": "username", "value": "'student'"}], "start": 1746750795944, "stop": 1746750795991}, {"name": "Вводим пароль", "status": "passed", "parameters": [{"name": "password", "value": "''"}], "start": 1746750795991, "stop": 1746750796040}, {"name": "Нажимаем кнопку Login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00C1FC53+61635]\n\tGetHandleVerifier [0x00C1FC94+61700]\n\t(No symbol) [0x00A405D3]\n\t(No symbol) [0x00A8899E]\n\t(No symbol) [0x00A88D3B]\n\t(No symbol) [0x00AD0E12]\n\t(No symbol) [0x00AAD2E4]\n\t(No symbol) [0x00ACE61B]\n\t(No symbol) [0x00AAD096]\n\t(No symbol) [0x00A7C840]\n\t(No symbol) [0x00A7D6A4]\n\tGetHandleVerifier [0x00EA4573+2701795]\n\tGetHandleVerifier [0x00E9FCF6+2683238]\n\tGetHandleVerifier [0x00EBAA3E+2793134]\n\tGetHandleVerifier [0x00C36915+155013]\n\tGetHandleVerifier [0x00C3CFFD+181357]\n\tGetHandleVerifier [0x00C274A8+92440]\n\tGetHandleVerifier [0x00C27650+92864]\n\tGetHandleVerifier [0x00C12040+5296]\n\tBaseThreadInitThunk [0x75727BA9+25]\n\tRtlInitializeExceptionChain [0x7716C2EB+107]\n\tRtlClearBits [0x7716C26F+191]\n\n", "trace": "  File \"E:\\qa_internship\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"E:\\qa_internship\\pages\\login_page.py\", line 35, in submit\n    self.click(self._SUBMIT)\n  File \"E:\\qa_internship\\pages\\base_page.py\", line 15, in click\n    self._visible(locator).click()\n    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\qa_internship\\pages\\base_page.py\", line 12, in _visible\n    return self.wait.until(EC.visibility_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\qa_internship\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1746750796040, "stop": 1746750806619}], "attachments": [{"name": "failure_screenshot", "source": "d9e412f9-dfb4-4f31-ac5d-8952bf252810-attachment.png", "type": "image/png"}], "parameters": [{"name": "username", "value": "'student'"}, {"name": "password", "value": "''"}], "start": 1746750795563, "stop": 1746750806620, "uuid": "0ea4045c-ddb3-472d-9f24-92319b65aecb", "historyId": "48371959acc6d5ac8a87fa4dd5832c06", "testCaseId": "6a0efb9b00f71e85fb5d9a82cffd023b", "fullName": "tests.ui.test_login_negative#test_login_negative", "labels": [{"name": "parentSuite", "value": "tests.ui"}, {"name": "suite", "value": "test_login_negative"}, {"name": "host", "value": "DESKTOP-T9UKEUB"}, {"name": "thread", "value": "24376-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ui.test_login_negative"}]}